{"version":3,"sources":["components/List.js","components/Addform.js","App.js","reportWebVitals.js","index.js"],"names":["List","className","this","props","dir","map","item","index","name","tel","rtel","cityname","ctryname","street","onClick","e","view","edit","delete","Component","Addform","state","isEditing","temp_index","handleChange","bind","add","update","alert","event","target","value","setState","preventDefault","push","console","log","splice","method","onSubmit","type","placeholder","onChange","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAyCeA,E,4JAtCX,WAAS,IAAD,OACJ,OACI,8BACI,oBAAIC,UAAU,aAAd,SAEOC,KAAKC,MAAMC,IAAIC,KAAI,SAACC,EAAMC,GAAP,OAClB,qBAAIN,UAAU,kBAAd,UAECK,EAAKE,KAFN,MAEeF,EAAKG,IAFpB,MAE4BH,EAAKI,KAFjC,KAEyCJ,EAAKK,SAF9C,KAE0DL,EAAKM,SAF/D,KAE2EN,EAAKO,OAChF,uBAAMZ,UAAU,cAAhB,UACI,wBACAA,UAAU,8BACVa,QACI,SAACC,GAAD,OAAK,EAAKZ,MAAMa,KAAKV,EAAKS,IAH9B,kBADJ,OAOI,wBACAd,UAAU,8BACVa,QAAS,SAACC,GAAD,OAAK,EAAKZ,MAAMc,KAAKV,EAAMQ,IAFpC,kBAPJ,OAWI,wBACAd,UAAU,wBACVa,QAAS,SAACC,GAAD,OAAK,EAAKZ,MAAMe,OAAOX,EAAMQ,IAFtC,yBAdiCR,c,GAP1CY,aCuLJC,E,kDArLX,WAAYjB,GAAO,IAAD,8BACd,cAAMA,IAEDkB,MAAM,CACPjB,IAAI,GACJE,KAAK,CACDE,KAAK,GACLC,IAAI,GACJC,KAAK,GACLC,SAAS,GACTC,SAAS,GACTC,OAAO,IAGXS,WAAU,EACVC,WAAW,MAEf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,IAAM,EAAKA,IAAID,KAAT,gBACX,EAAKP,OAAS,EAAKA,OAAOO,KAAZ,gBACd,EAAKR,KAAO,EAAKA,KAAKQ,KAAV,gBACZ,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,gBACd,EAAKT,KAAO,EAAKA,KAAKS,KAAV,gBAtBE,E,wCAyBlB,SAAKnB,GACDsB,MAAM,wBAAD,OAEQtB,EAAKE,KAFb,6BAGKF,EAAKG,IAHV,8BAIMH,EAAKI,KAJX,8BAKMJ,EAAKK,SALX,iCAMSL,EAAKM,SANd,wCAOgBN,EAAKO,OAPrB,uB,0BAaT,SAAagB,GACT,IAAMrB,EAAOqB,EAAMC,OAAOtB,KACpBuB,EAAOF,EAAMC,OAAOC,MACtBzB,EAAOJ,KAAKmB,MAAMf,KAErBA,EAAKE,GAAMuB,EAEX7B,KAAK8B,SAAS,CAAC1B,KAAKA,M,iBAGzB,SAAIS,GACAA,EAAEkB,iBACF,IAAI7B,EAAMF,KAAKmB,MAAMjB,IACrBA,EAAI8B,KAAKhC,KAAKmB,MAAMf,MACpBJ,KAAK8B,SAAS,CAAC5B,IAAIA,EAAKE,KAAK,CAACE,KAAK,GAAGC,IAAI,GAAGC,KAAK,GAAGC,SAAS,GAAGC,SAAS,MAC1EuB,QAAQC,IAAIlC,KAAKmB,MAAMjB,O,kBAG3B,SAAKG,GACD,IAAID,EAAOJ,KAAKmB,MAAMjB,IAAIG,GAC1BL,KAAK8B,SAAS,CAAC1B,KAAKA,EAAMgB,WAAU,EAAMC,WAAWhB,M,oBAIzD,SAAOQ,GACHA,EAAEkB,iBACF,IAAI7B,EAAMF,KAAKmB,MAAMjB,IACrBA,EAAIF,KAAKmB,MAAME,YAAcrB,KAAKmB,MAAMf,KAExCJ,KAAK8B,SAAS,CACV5B,IAAIA,EACJE,KAAK,CACDE,KAAK,GACLC,IAAI,GACJC,KAAK,GACLC,SAAS,GACTC,SAAS,GACTC,OAAO,IAEXS,WAAU,EACVC,WAAW,S,oBAInB,SAAOhB,GACH,IAAIH,EAAMF,KAAKmB,MAAMjB,IACrBA,EAAIiC,OAAO9B,EAAO,GAClBL,KAAK8B,SAAS,CAAC5B,IAAIA,M,oBAEvB,WACI,OACI,gCACI,oBAAIH,UAAU,yBAAd,kCACD,uBAAMqC,OAAO,OAAOC,SAAUrC,KAAKmB,MAAMC,UAAYpB,KAAKyB,OAASzB,KAAKwB,IAAxE,UACI,gCACI,uBACIc,KAAK,OACLhC,KAAK,OACLiC,YAAY,aACZxC,UAAU,eACV8B,MAAO7B,KAAKmB,MAAMf,KAAKE,KACvBkC,SAAUxC,KAAKsB,eAPvB,UAYA,gCACI,uBACIgB,KAAK,OACLhC,KAAK,MACLiC,YAAY,yBACZxC,UAAU,eACV8B,MAAO7B,KAAKmB,MAAMf,KAAKG,IACvBiC,SAAUxC,KAAKsB,eAPvB,UAWA,gCACI,uBACIgB,KAAK,OACLhC,KAAK,OACLiC,YAAY,8BACZxC,UAAU,eACV8B,MAAO7B,KAAKmB,MAAMf,KAAKI,KACvBgC,SAAUxC,KAAKsB,eAPvB,UAWA,gCACI,uBACIgB,KAAK,OACLhC,KAAK,WACLiC,YAAY,kBACZxC,UAAU,eACV8B,MAAO7B,KAAKmB,MAAMf,KAAKK,SACvB+B,SAAUxC,KAAKsB,eAPvB,UAWA,gCACI,uBACIgB,KAAK,OACLhC,KAAK,WACLiC,YAAY,sBACZxC,UAAU,eACV8B,MAAO7B,KAAKmB,MAAMf,KAAKM,SACvB8B,SAAUxC,KAAKsB,eAPvB,UAWA,gCACI,uBACIgB,KAAK,OACLhC,KAAK,SACLiC,YAAY,4BACZxC,UAAU,eACV8B,MAAO7B,KAAKmB,MAAMf,KAAKO,OACvB6B,SAAUxC,KAAKsB,eAPvB,UAWA,gCACI,wBAAQvB,UAAU,kBAAkB0C,MAAM,MAAMH,KAAK,SAArD,SACKtC,KAAKmB,MAAMC,UAAY,SAAW,SAF3C,aAOJ,cAAC,EAAD,CACGlB,IAAKF,KAAKmB,MAAMjB,IAChBc,OAAQhB,KAAKgB,OACbD,KAAMf,KAAKe,KACXD,KAAMd,KAAKc,c,GA5KPG,aCUPyB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.609b39ae.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass List extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ul className=\"list-group\">\r\n                   {\r\n                       this.props.dir.map((item, index)=>(\r\n                        <li className=\"list-group-item\" key={index}>\r\n                        \r\n                        {item.name} - {item.tel} - {item.rtel} -{item.cityname} -{item.ctryname} -{item.street}\r\n                        <span className=\"float-right\">\r\n                            <button\r\n                            className=\"btn btn-success btn-sm mr-2\"\r\n                            onClick={\r\n                                (e)=>this.props.view(item,e)\r\n                            }\r\n                           >View</button>&nbsp;\r\n                            <button\r\n                            className=\"btn btn-warning btn-sm mr-2\"\r\n                            onClick={(e)=>this.props.edit(index,e)}\r\n                            >Edit</button>&nbsp;\r\n                            <button\r\n                            className=\"btn btn-danger btn-sm\"\r\n                            onClick={(e)=>this.props.delete(index,e)}\r\n                            >Delete</button>\r\n                        </span>\r\n                        \r\n                        </li>\r\n                       ))\r\n                   }\r\n                    \r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default List;","import {Component} from 'react';\r\nimport List from './List';\r\n\r\nclass Addform extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            dir:[],\r\n            item:{\r\n                name:\"\",\r\n                tel:\"\",\r\n                rtel:\"\",\r\n                cityname:\"\",\r\n                ctryname:\"\",\r\n                street:\"\"\r\n\r\n            },\r\n            isEditing:false,\r\n            temp_index:null\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.add = this.add.bind(this)\r\n        this.delete = this.delete.bind(this)\r\n        this.edit = this.edit.bind(this)\r\n        this.update = this.update.bind(this )\r\n        this.view = this.view.bind(this)\r\n    }\r\n\r\n    view(item){\r\n        alert(\r\n            `\r\n            Name = ${item.name}\r\n            Tel=${item.tel}\r\n            Rtel=${item.rtel}\r\n            City=${item.cityname}\r\n            Country=${item.ctryname}\r\n            Street Address=${item.street}\r\n\r\n            `\r\n        )\r\n    }\r\n\r\n    handleChange(event){\r\n        const name = event.target.name;\r\n        const value= event.target.value;\r\n        let item = this.state.item;\r\n\r\n         item[name]=value;\r\n\r\n         this.setState({item:item})\r\n    }\r\n\r\n    add(e){\r\n        e.preventDefault()\r\n        let dir = this.state.dir;\r\n        dir.push(this.state.item)\r\n        this.setState({dir:dir, item:{name:\"\",tel:\"\",rtel:\"\",cityname:\"\",ctryname:\"\"}})\r\n        console.log(this.state.dir)\r\n    }\r\n\r\n    edit(index){\r\n        let item = this.state.dir[index]\r\n        this.setState({item:item, isEditing:true, temp_index:index})\r\n\r\n    }\r\n\r\n    update(e){\r\n        e.preventDefault()\r\n        let dir = this.state.dir;\r\n        dir[this.state.temp_index] = this.state.item\r\n\r\n        this.setState({\r\n            dir:dir,\r\n            item:{\r\n                name:\"\",\r\n                tel:\"\",\r\n                rtel:\"\",\r\n                cityname:\"\",\r\n                ctryname:\"\",\r\n                street:\"\"\r\n            },\r\n            isEditing:false,\r\n            temp_index:null\r\n        })\r\n    }\r\n\r\n    delete(index){\r\n        let dir = this.state.dir;\r\n        dir.splice(index, 1)\r\n        this.setState({dir:dir})\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1 className='alert-info text-center'>Your Contact Detalis</h1>\r\n               <form method=\"POST\" onSubmit={this.state.isEditing ? this.update : this.add}>\r\n                   <div>\r\n                       <input\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           placeholder=\"Enter Name\"\r\n                           className=\"form-control\"\r\n                           value={this.state.item.name}\r\n                           onChange={this.handleChange}\r\n                           />&nbsp;\r\n                             \r\n                   </div>\r\n\r\n                   <div>\r\n                       <input\r\n                           type=\"text\"\r\n                           name=\"tel\"\r\n                           placeholder=\"Enter Office Phone no.\"\r\n                           className=\"form-control\"\r\n                           value={this.state.item.tel}\r\n                           onChange={this.handleChange}\r\n                           />&nbsp;\r\n                             \r\n                   </div>\r\n                   <div>\r\n                       <input\r\n                           type=\"text\"\r\n                           name=\"rtel\"\r\n                           placeholder=\"Enter Residential Phone no.\"\r\n                           className=\"form-control\"\r\n                           value={this.state.item.rtel}\r\n                           onChange={this.handleChange}\r\n                           />&nbsp;\r\n                             \r\n                   </div>\r\n                   <div>\r\n                       <input\r\n                           type=\"text\"\r\n                           name=\"cityname\"\r\n                           placeholder=\"Enter your City\"\r\n                           className=\"form-control\"\r\n                           value={this.state.item.cityname}\r\n                           onChange={this.handleChange}\r\n                           />&nbsp;\r\n                             \r\n                   </div>\r\n                   <div>\r\n                       <input\r\n                           type=\"text\"\r\n                           name=\"ctryname\"\r\n                           placeholder=\"Enter your Country \"\r\n                           className=\"form-control\"\r\n                           value={this.state.item.ctryname}\r\n                           onChange={this.handleChange}\r\n                           />&nbsp;\r\n                             \r\n                   </div>\r\n                   <div>\r\n                       <input\r\n                           type=\"text\"\r\n                           name=\"street\"\r\n                           placeholder=\"Enter your Street Address\"\r\n                           className=\"form-control\"\r\n                           value={this.state.item.street}\r\n                           onChange={this.handleChange}\r\n                           />&nbsp;\r\n                             \r\n                   </div>\r\n                   <div>\r\n                       <button className=\"btn btn-primary\" color=\"red\" type=\"submit\">\r\n                           {this.state.isEditing ? \"Update\" : \"Save\"}\r\n                       </button>&nbsp;\r\n                   </div>\r\n               </form>\r\n\r\n               <List\r\n                  dir={this.state.dir}\r\n                  delete={this.delete}\r\n                  edit={this.edit}\r\n                  view={this.view}\r\n                  \r\n               />\r\n            </div>\r\n\r\n\r\n        )\r\n        }\r\n\r\n}\r\nexport default Addform;","\n\nimport './App.css';\nimport Addform from './components/Addform';\n\nfunction App() {\n  return (\n    <div>\n      <Addform/>    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}